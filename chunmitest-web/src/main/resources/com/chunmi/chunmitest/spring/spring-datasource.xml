<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<!-- 数据源的配置 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- data source configuration -->
		<property name="initialSize" value="200" /><!-- 初始化创建的连接数，当不够时再去创建 -->
		<property name="maxActive" value="800" /><!-- 最大连接数量，连接数连不能超过该值  -->
		<property name="maxIdle" value="100" /><!-- 最大空闲连接，当空闲连接超过该值时就挨个关闭多余的连接，但不能小于minldle,该属性在Druid连接池已不再使用，配置了也没有效果 --> 
		<property name="minIdle" value="50" /><!-- 最小连接数量 -->
		<property name="maxWait" value="0"/> <!-- 最大等待时间,设置参数为0或者负数使得无限等待 -->
		<!-- 处理mysql 8小时自动断开连接的问题 -->
		<property name="testWhileIdle" value="true" /> <!-- 是否超时检测 -->
		<property name="testOnBorrow" value="false" /> <!-- 申请连接检测 -->
		<property name="testOnReturn" value="false" /> <!-- 归还连接检测 -->
		<property name="validationQuery" value="select 1" /> <!-- 校验用sql语句 -->
		<property name="timeBetweenEvictionRunsMillis" value="20000" /> <!-- 空闲时间 -->
		<property name="numTestsPerEvictionRun" value="100" />
		<!--属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有： 监控统计用的filter:stat 日志用的filter:log4j 防御SQL注入的filter:wall -->
		<property name="filters" value="${druid.filters}" />
	</bean>

	<!--  
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		p:configLocation="classpath:com/chunmi/chunmitest/mybatis/mybatis.xml"
		p:dataSource-ref="dataSource" p:mapperLocations="classpath*:com/chunmi/chunmitest/mapper/*.xml" />
	-->
	
    <!-- spring和MyBatis整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:com/chunmi/chunmitest/mapper/*.xml"></property>  
    </bean>
		
		
 	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
		p:sqlSessionFactoryBeanName="sqlSessionFactory" p:basePackage="com.chunmi.chunmitest.mapper" />

	<!--事务相关控制 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>
